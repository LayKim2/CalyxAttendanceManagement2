@page "/calendar"

@attribute [Authorize]
@inject Radzen.DialogService DialogService
@inject ICalendarService CalendarService
@inject AuthenticationStateProvider AuthStateProvider
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<RadzenScheduler @ref=@scheduler SlotRender=@OnSlotRender style="height: 768px;" TItem="CalyxAttendanceManagement.Shared.Model.Calendar" Data=@CalendarService.CalendarList StartProperty="Start" EndProperty="End"
                 TextProperty="Text" SelectedIndex="2">
    <RadzenDayView />
    <RadzenWeekView />
    <RadzenMonthView />
</RadzenScheduler>

@code {
    bool isAuthenticated = false;
    RadzenScheduler<CalyxAttendanceManagement.Shared.Model.Calendar> scheduler;
    Dictionary<DateTime, string> events = new Dictionary<DateTime, string>();

    protected override async Task OnInitializedAsync()
    {
        await CheckAuth();

        if (isAuthenticated)
        {
            await CalendarService.GetCalendar();
        }
        
    }

    void OnSlotRender(SchedulerSlotRenderEventArgs args)
    {
        // Highlight today in month view
        if (args.View.Text == "Month" && args.Start.Date == DateTime.Today)
        {
            args.Attributes["style"] = "background: rgba(255,220,40,.2);";
        }

        // Highlight working hours (9-18)
        if ((args.View.Text == "Week" || args.View.Text == "Day") && args.Start.Hour > 8 && args.Start.Hour < 19)
        {
            args.Attributes["style"] = "background: rgba(255,220,40,.2);";
        }
    }

    private async Task CheckAuth()
    {
        isAuthenticated = await AuthService.IsUserAuthenticated();

        if (!isAuthenticated)
        {
            NavigationManager.NavigateTo("login");
        }
    }
}
